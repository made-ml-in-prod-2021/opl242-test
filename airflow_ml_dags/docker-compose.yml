version: '3.7'
# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-environment: &airflow_environment
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}
  - AIRFLOW__SMTP__SMTP_HOST=smtp.gmail.com
  - AIRFLOW__SMTP__SMTP_PORT=587
  - AIRFLOW__SMTP__SMTP_USER=${MAIL_LOGIN}
  - AIRFLOW__SMTP__SMTP_PASSWORD=${MAIL_PWD}


x-airflow-image: &airflow_image apache/airflow:2.1.0-python3.8
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================
services:

  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"

  init:
    build:
      context: images/airflow-docker-opl
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker-opl
    depends_on:
      - postgres
    environment: *airflow_environment
    entrypoint: /bin/bash
    command: -c 'airflow db init && airflow users create --username admin --password admin
      --firstname Anonymous --lastname Admin --role Admin --email admin@example.org &&
      airflow connections add fs_default --conn-type fs &&
      airflow variables set PATH_TO_MODEL data/models/2021-06-14'

  webserver:
    build:
      context: images/airflow-docker-opl
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker-opl
    restart: always
    depends_on:
      - postgres
    ports:
      - "8082:8080"
    volumes:
      - logs:/opt/airflow/logs
      - ./dags/:/opt/airflow/dags/
    environment: *airflow_environment
    command: webserver

  scheduler:
    build:
      context: images/airflow-docker-opl
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker-opl
    restart: always
    depends_on:
      - postgres
    volumes:
      - logs:/opt/airflow/logs
      - ./dags/:/opt/airflow/dags/
      - ./data/:/opt/airflow/data/
      - /var/run/docker.sock:/var/run/docker.sock
    environment: *airflow_environment
    command: scheduler

  ml_base:
    build:
      context: images/airflow-ml-base-opl
    image: airflow-ml-base-opl
    restart: "no"

  generate:
    build:
      context: images/airflow-generate
    image: airflow-generate
    depends_on:
      - ml_base
    restart: "no"

  preprocess:
    build:
      context: images/airflow-preprocess
    image: airflow-preprocess
    depends_on:
      - ml_base
    restart: "no"

  split:
    build:
      context: images/airflow-split
    image: airflow-split
    depends_on:
      - preprocess
    restart: "no"

  train:
    build:
      context: images/airflow-train
    image: airflow-train
    depends_on:
      - split
    restart: "no"

  eval:
    build:
      context: images/airflow-eval
    image: airflow-eval
    depends_on:
      - train
    restart: "no"

  predict:
    build:
      context: images/airflow-predict
    image: airflow-predict
    depends_on:
      - ml_base
    restart: "no"


volumes:
  logs:
